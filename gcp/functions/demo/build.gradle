plugins {
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    invoker
}

dependencies {
    // Every function needs this dependency to get the Functions Framework API.
    compileOnly 'com.google.cloud.functions:functions-framework-api:1.1.0'

    implementation 'com.google.cloud.opentelemetry:exporter-trace:0.25.2'
    implementation 'io.opentelemetry:opentelemetry-api:1.28.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.28.0'

    // To run function locally using Functions Framework's local invoker
    invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.3.0'
    // [END functions_gradle_add_dependencies]
    // [END functions_example_pom_dependencies]

    // These dependencies are only used by the tests.
    testImplementation 'com.google.cloud.functions:functions-framework-api:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.1.5'
    testImplementation 'org.mockito:mockito-core:5.4.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("runFunction", JavaExec) {
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath(configurations.invoker)
    inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
    args(
            '--target', project.findProperty('run.functionTarget') ?: '',
            '--port', project.findProperty('run.port') ?: 8080
    )
    doFirst {
        args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
    }
}